/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package net.troja.eve.esi.api;

import static org.hamcrest.Matchers.greaterThan;
import static org.junit.Assert.assertThat;

import java.util.List;

import org.junit.Before;
import org.junit.Ignore;
import org.junit.Test;

import net.troja.eve.esi.ApiException;
import net.troja.eve.esi.model.CharacterFittingsResponse;

/**
 * API tests for FittingsApi
 */
public class FittingsApiTest extends GeneralApiTest {

    private final FittingsApi api = new FittingsApi();

    @Before
    public void setUp() {
        api.setApiClient(apiClient);
    }

    /**
     * Delete fitting
     *
     * Delete a fitting from a character --- Alternate route:
     * &#x60;/v1/characters/{character_id}/fittings/{fitting_id}/&#x60;
     * Alternate route:
     * &#x60;/legacy/characters/{character_id}/fittings/{fitting_id}/&#x60;
     * Alternate route:
     * &#x60;/dev/characters/{character_id}/fittings/{fitting_id}/&#x60; SSO
     * Scope: esi-fittings.write_fittings.v1
     *
     * @throws ApiException
     *             if the Api call fails
     */
    @Test
    @Ignore("Delete can't be tested")
    public void deleteCharactersCharacterIdFittingsFittingIdTest() throws ApiException {
    }

    /**
     * Get fittings
     *
     * Return fittings of a character --- Alternate route:
     * &#x60;/v1/characters/{character_id}/fittings/&#x60; Alternate route:
     * &#x60;/legacy/characters/{character_id}/fittings/&#x60; Alternate route:
     * &#x60;/dev/characters/{character_id}/fittings/&#x60; --- This route is
     * cached for up to 300 seconds SSO Scope: esi-fittings.read_fittings.v1
     *
     * @throws ApiException
     *             if the Api call fails
     */
    @Test
    public void getCharactersCharacterIdFittingsTest() throws ApiException {
        final List<CharacterFittingsResponse> response = api.getCharactersCharacterIdFittings(characterId, DATASOURCE, null, null);

        assertThat(response.size(), greaterThan(0));
        final CharacterFittingsResponse fitting = response.get(0);
        assertThat(fitting.getItems().size(), greaterThan(0));
    }

    /**
     * Create fitting
     *
     * Save a new fitting for a character --- Alternate route:
     * &#x60;/v1/characters/{character_id}/fittings/&#x60; Alternate route:
     * &#x60;/legacy/characters/{character_id}/fittings/&#x60; Alternate route:
     * &#x60;/dev/characters/{character_id}/fittings/&#x60; SSO Scope:
     * esi-fittings.write_fittings.v1
     *
     * @throws ApiException
     *             if the Api call fails
     */
    @Test
    @Ignore("Writing can't be tested")
    public void postCharactersCharacterIdFittingsTest() throws ApiException {
    }

}
