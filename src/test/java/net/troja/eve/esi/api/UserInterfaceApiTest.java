/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package net.troja.eve.esi.api;

import org.junit.Before;
import org.junit.Ignore;
import org.junit.Test;

import net.troja.eve.esi.ApiException;
import net.troja.eve.esi.model.UiNewMail;

/**
 * API tests for UserInterfaceApi
 */
public class UserInterfaceApiTest extends GeneralApiTest {

    private final UserInterfaceApi api = new UserInterfaceApi();

    @Before
    public void setUp() {
        api.setApiClient(apiClient);
    }

    /**
     * Set Autopilot Waypoint
     *
     * Set a solar system as autopilot waypoint --- Alternate route:
     * &#x60;/v2/ui/autopilot/waypoint/&#x60; Alternate route:
     * &#x60;/dev/ui/autopilot/waypoint/&#x60; SSO Scope:
     * esi-ui.write_waypoint.v1
     *
     * @throws ApiException
     *             if the Api call fails
     */
    @Test
    @Ignore("Can't test that without running eve")
    public void postUiAutopilotWaypointTest() throws ApiException {
        final Boolean addToBeginning = true;
        final Boolean clearOtherWaypoints = true;
        final Long destinationId = 30000023l;
        // api.postUiAutopilotWaypoint(addToBeginning, clearOtherWaypoints,
        // destinationId, DATASOURCE, null, null,
        // null);
    }

    /**
     * Open Contract Window
     *
     * Open the contract window inside the client --- Alternate route:
     * &#x60;/v1/ui/openwindow/contract/&#x60; Alternate route:
     * &#x60;/legacy/ui/openwindow/contract/&#x60; Alternate route:
     * &#x60;/dev/ui/openwindow/contract/&#x60; SSO Scope: esi-ui.open_window.v1
     *
     * @throws ApiException
     *             if the Api call fails
     */
    @Test
    @Ignore("Can't test that without running eve")
    public void postUiOpenwindowContractTest() throws ApiException {
        final Integer contractId = null;
        // api.postUiOpenwindowContract(contractId, DATASOURCE, null,
        // null, null);

        // TODO: test validations
    }

    /**
     * Open Information Window
     *
     * Open the information window for a character, corporation or alliance
     * inside the client --- Alternate route:
     * &#x60;/v1/ui/openwindow/information/&#x60; Alternate route:
     * &#x60;/legacy/ui/openwindow/information/&#x60; Alternate route:
     * &#x60;/dev/ui/openwindow/information/&#x60; SSO Scope:
     * esi-ui.open_window.v1
     *
     * @throws ApiException
     *             if the Api call fails
     */
    @Test
    @Ignore("Can't test that without running eve")
    public void postUiOpenwindowInformationTest() throws ApiException {
        final Integer targetId = null;
        // api.postUiOpenwindowInformation(targetId, DATASOURCE, null,
        // null, null);

        // TODO: test validations
    }

    /**
     * Open Market Details
     *
     * Open the market details window for a specific typeID inside the client
     * --- Alternate route: &#x60;/v1/ui/openwindow/marketdetails/&#x60;
     * Alternate route: &#x60;/legacy/ui/openwindow/marketdetails/&#x60;
     * Alternate route: &#x60;/dev/ui/openwindow/marketdetails/&#x60; SSO Scope:
     * esi-ui.open_window.v1
     *
     * @throws ApiException
     *             if the Api call fails
     */
    @Test
    @Ignore("Can't test that without running eve")
    public void postUiOpenwindowMarketdetailsTest() throws ApiException {
        final Integer typeId = null;
        // api.postUiOpenwindowMarketdetails(typeId, DATASOURCE, null,
        // null, null);

        // TODO: test validations
    }

    /**
     * Open New Mail Window
     *
     * Open the New Mail window, according to settings from the request if
     * applicable --- Alternate route: &#x60;/v1/ui/openwindow/newmail/&#x60;
     * Alternate route: &#x60;/legacy/ui/openwindow/newmail/&#x60; Alternate
     * route: &#x60;/dev/ui/openwindow/newmail/&#x60; SSO Scope:
     * esi-ui.open_window.v1
     *
     * @throws ApiException
     *             if the Api call fails
     */
    @Test
    @Ignore("Can't test that without running eve")
    public void postUiOpenwindowNewmailTest() throws ApiException {
        final UiNewMail newMail = null;
        // api.postUiOpenwindowNewmail(newMail, DATASOURCE, null, null,
        // null);

        // TODO: test validations
    }

}
