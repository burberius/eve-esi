/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 1.17
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package net.troja.eve.esi.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for CharacterContractsResponse
 */
public class CharacterContractsResponseTest {
    private final CharacterContractsResponse model = new CharacterContractsResponse();

    /**
     * Model tests for CharacterContractsResponse
     */
    @Test
    public void testCharacterContractsResponse() {
        // TODO: test CharacterContractsResponse
    }

    /**
     * Test the property 'acceptorId'
     */
    @Test
    public void acceptorIdTest() {
        // TODO: test acceptorId
    }

    /**
     * Test the property 'assigneeId'
     */
    @Test
    public void assigneeIdTest() {
        // TODO: test assigneeId
    }

    /**
     * Test the property 'availability'
     */
    @Test
    public void availabilityTest() {
        // TODO: test availability
    }

    /**
     * Test the property 'buyout'
     */
    @Test
    public void buyoutTest() {
        // TODO: test buyout
    }

    /**
     * Test the property 'collateral'
     */
    @Test
    public void collateralTest() {
        // TODO: test collateral
    }

    /**
     * Test the property 'contractId'
     */
    @Test
    public void contractIdTest() {
        // TODO: test contractId
    }

    /**
     * Test the property 'dateAccepted'
     */
    @Test
    public void dateAcceptedTest() {
        // TODO: test dateAccepted
    }

    /**
     * Test the property 'dateCompleted'
     */
    @Test
    public void dateCompletedTest() {
        // TODO: test dateCompleted
    }

    /**
     * Test the property 'dateExpired'
     */
    @Test
    public void dateExpiredTest() {
        // TODO: test dateExpired
    }

    /**
     * Test the property 'dateIssued'
     */
    @Test
    public void dateIssuedTest() {
        // TODO: test dateIssued
    }

    /**
     * Test the property 'daysToComplete'
     */
    @Test
    public void daysToCompleteTest() {
        // TODO: test daysToComplete
    }

    /**
     * Test the property 'endLocationId'
     */
    @Test
    public void endLocationIdTest() {
        // TODO: test endLocationId
    }

    /**
     * Test the property 'forCorporation'
     */
    @Test
    public void forCorporationTest() {
        // TODO: test forCorporation
    }

    /**
     * Test the property 'issuerCorporationId'
     */
    @Test
    public void issuerCorporationIdTest() {
        // TODO: test issuerCorporationId
    }

    /**
     * Test the property 'issuerId'
     */
    @Test
    public void issuerIdTest() {
        // TODO: test issuerId
    }

    /**
     * Test the property 'price'
     */
    @Test
    public void priceTest() {
        // TODO: test price
    }

    /**
     * Test the property 'reward'
     */
    @Test
    public void rewardTest() {
        // TODO: test reward
    }

    /**
     * Test the property 'startLocationId'
     */
    @Test
    public void startLocationIdTest() {
        // TODO: test startLocationId
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'title'
     */
    @Test
    public void titleTest() {
        // TODO: test title
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'volume'
     */
    @Test
    public void volumeTest() {
        // TODO: test volume
    }

}
