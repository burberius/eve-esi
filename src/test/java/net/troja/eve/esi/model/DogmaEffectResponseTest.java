/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 1.17
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package net.troja.eve.esi.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import net.troja.eve.esi.model.DogmaEffectModifier;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for DogmaEffectResponse
 */
public class DogmaEffectResponseTest {
    private final DogmaEffectResponse model = new DogmaEffectResponse();

    /**
     * Model tests for DogmaEffectResponse
     */
    @Test
    public void testDogmaEffectResponse() {
        // TODO: test DogmaEffectResponse
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'disallowAutoRepeat'
     */
    @Test
    public void disallowAutoRepeatTest() {
        // TODO: test disallowAutoRepeat
    }

    /**
     * Test the property 'dischargeAttributeId'
     */
    @Test
    public void dischargeAttributeIdTest() {
        // TODO: test dischargeAttributeId
    }

    /**
     * Test the property 'displayName'
     */
    @Test
    public void displayNameTest() {
        // TODO: test displayName
    }

    /**
     * Test the property 'durationAttributeId'
     */
    @Test
    public void durationAttributeIdTest() {
        // TODO: test durationAttributeId
    }

    /**
     * Test the property 'effectCategory'
     */
    @Test
    public void effectCategoryTest() {
        // TODO: test effectCategory
    }

    /**
     * Test the property 'effectId'
     */
    @Test
    public void effectIdTest() {
        // TODO: test effectId
    }

    /**
     * Test the property 'electronicChance'
     */
    @Test
    public void electronicChanceTest() {
        // TODO: test electronicChance
    }

    /**
     * Test the property 'falloffAttributeId'
     */
    @Test
    public void falloffAttributeIdTest() {
        // TODO: test falloffAttributeId
    }

    /**
     * Test the property 'iconId'
     */
    @Test
    public void iconIdTest() {
        // TODO: test iconId
    }

    /**
     * Test the property 'isAssistance'
     */
    @Test
    public void isAssistanceTest() {
        // TODO: test isAssistance
    }

    /**
     * Test the property 'isOffensive'
     */
    @Test
    public void isOffensiveTest() {
        // TODO: test isOffensive
    }

    /**
     * Test the property 'isWarpSafe'
     */
    @Test
    public void isWarpSafeTest() {
        // TODO: test isWarpSafe
    }

    /**
     * Test the property 'modifiers'
     */
    @Test
    public void modifiersTest() {
        // TODO: test modifiers
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'postExpression'
     */
    @Test
    public void postExpressionTest() {
        // TODO: test postExpression
    }

    /**
     * Test the property 'preExpression'
     */
    @Test
    public void preExpressionTest() {
        // TODO: test preExpression
    }

    /**
     * Test the property 'published'
     */
    @Test
    public void publishedTest() {
        // TODO: test published
    }

    /**
     * Test the property 'rangeAttributeId'
     */
    @Test
    public void rangeAttributeIdTest() {
        // TODO: test rangeAttributeId
    }

    /**
     * Test the property 'rangeChance'
     */
    @Test
    public void rangeChanceTest() {
        // TODO: test rangeChance
    }

    /**
     * Test the property 'trackingSpeedAttributeId'
     */
    @Test
    public void trackingSpeedAttributeIdTest() {
        // TODO: test trackingSpeedAttributeId
    }

}
