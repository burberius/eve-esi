/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 1.30
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package net.troja.eve.esi.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import net.troja.eve.esi.JSON;

/**
 * attacker object
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class KillmailAttacker implements Serializable {
    private static final long serialVersionUID = 1L;

    public static final String SERIALIZED_NAME_ALLIANCE_ID = "alliance_id";
    @SerializedName(SERIALIZED_NAME_ALLIANCE_ID)
    private Integer allianceId;

    public static final String SERIALIZED_NAME_CHARACTER_ID = "character_id";
    @SerializedName(SERIALIZED_NAME_CHARACTER_ID)
    private Integer characterId;

    public static final String SERIALIZED_NAME_CORPORATION_ID = "corporation_id";
    @SerializedName(SERIALIZED_NAME_CORPORATION_ID)
    private Integer corporationId;

    public static final String SERIALIZED_NAME_DAMAGE_DONE = "damage_done";
    @SerializedName(SERIALIZED_NAME_DAMAGE_DONE)
    private Integer damageDone;

    public static final String SERIALIZED_NAME_FACTION_ID = "faction_id";
    @SerializedName(SERIALIZED_NAME_FACTION_ID)
    private Integer factionId;

    public static final String SERIALIZED_NAME_FINAL_BLOW = "final_blow";
    @SerializedName(SERIALIZED_NAME_FINAL_BLOW)
    private Boolean finalBlow;

    public static final String SERIALIZED_NAME_SECURITY_STATUS = "security_status";
    @SerializedName(SERIALIZED_NAME_SECURITY_STATUS)
    private Float securityStatus;

    public static final String SERIALIZED_NAME_SHIP_TYPE_ID = "ship_type_id";
    @SerializedName(SERIALIZED_NAME_SHIP_TYPE_ID)
    private Integer shipTypeId;

    public static final String SERIALIZED_NAME_WEAPON_TYPE_ID = "weapon_type_id";
    @SerializedName(SERIALIZED_NAME_WEAPON_TYPE_ID)
    private Integer weaponTypeId;

    public KillmailAttacker() {
    }

    public KillmailAttacker allianceId(Integer allianceId) {

        this.allianceId = allianceId;
        return this;
    }

    /**
     * alliance_id integer
     * 
     * @return allianceId
     **/
    @javax.annotation.Nullable
    public Integer getAllianceId() {
        return allianceId;
    }

    public void setAllianceId(Integer allianceId) {
        this.allianceId = allianceId;
    }

    public KillmailAttacker characterId(Integer characterId) {

        this.characterId = characterId;
        return this;
    }

    /**
     * character_id integer
     * 
     * @return characterId
     **/
    @javax.annotation.Nullable
    public Integer getCharacterId() {
        return characterId;
    }

    public void setCharacterId(Integer characterId) {
        this.characterId = characterId;
    }

    public KillmailAttacker corporationId(Integer corporationId) {

        this.corporationId = corporationId;
        return this;
    }

    /**
     * corporation_id integer
     * 
     * @return corporationId
     **/
    @javax.annotation.Nullable
    public Integer getCorporationId() {
        return corporationId;
    }

    public void setCorporationId(Integer corporationId) {
        this.corporationId = corporationId;
    }

    public KillmailAttacker damageDone(Integer damageDone) {

        this.damageDone = damageDone;
        return this;
    }

    /**
     * damage_done integer
     * 
     * @return damageDone
     **/
    @javax.annotation.Nonnull
    public Integer getDamageDone() {
        return damageDone;
    }

    public void setDamageDone(Integer damageDone) {
        this.damageDone = damageDone;
    }

    public KillmailAttacker factionId(Integer factionId) {

        this.factionId = factionId;
        return this;
    }

    /**
     * faction_id integer
     * 
     * @return factionId
     **/
    @javax.annotation.Nullable
    public Integer getFactionId() {
        return factionId;
    }

    public void setFactionId(Integer factionId) {
        this.factionId = factionId;
    }

    public KillmailAttacker finalBlow(Boolean finalBlow) {

        this.finalBlow = finalBlow;
        return this;
    }

    /**
     * Was the attacker the one to achieve the final blow
     * 
     * @return finalBlow
     **/
    @javax.annotation.Nonnull
    public Boolean getFinalBlow() {
        return finalBlow;
    }

    public void setFinalBlow(Boolean finalBlow) {
        this.finalBlow = finalBlow;
    }

    public KillmailAttacker securityStatus(Float securityStatus) {

        this.securityStatus = securityStatus;
        return this;
    }

    /**
     * Security status for the attacker
     * 
     * @return securityStatus
     **/
    @javax.annotation.Nonnull
    public Float getSecurityStatus() {
        return securityStatus;
    }

    public void setSecurityStatus(Float securityStatus) {
        this.securityStatus = securityStatus;
    }

    public KillmailAttacker shipTypeId(Integer shipTypeId) {

        this.shipTypeId = shipTypeId;
        return this;
    }

    /**
     * What ship was the attacker flying
     * 
     * @return shipTypeId
     **/
    @javax.annotation.Nullable
    public Integer getShipTypeId() {
        return shipTypeId;
    }

    public void setShipTypeId(Integer shipTypeId) {
        this.shipTypeId = shipTypeId;
    }

    public KillmailAttacker weaponTypeId(Integer weaponTypeId) {

        this.weaponTypeId = weaponTypeId;
        return this;
    }

    /**
     * What weapon was used by the attacker for the kill
     * 
     * @return weaponTypeId
     **/
    @javax.annotation.Nullable
    public Integer getWeaponTypeId() {
        return weaponTypeId;
    }

    public void setWeaponTypeId(Integer weaponTypeId) {
        this.weaponTypeId = weaponTypeId;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        KillmailAttacker killmailAttacker = (KillmailAttacker) o;
        return Objects.equals(this.allianceId, killmailAttacker.allianceId)
                && Objects.equals(this.characterId, killmailAttacker.characterId)
                && Objects.equals(this.corporationId, killmailAttacker.corporationId)
                && Objects.equals(this.damageDone, killmailAttacker.damageDone)
                && Objects.equals(this.factionId, killmailAttacker.factionId)
                && Objects.equals(this.finalBlow, killmailAttacker.finalBlow)
                && Objects.equals(this.securityStatus, killmailAttacker.securityStatus)
                && Objects.equals(this.shipTypeId, killmailAttacker.shipTypeId)
                && Objects.equals(this.weaponTypeId, killmailAttacker.weaponTypeId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(allianceId, characterId, corporationId, damageDone, factionId, finalBlow, securityStatus,
                shipTypeId, weaponTypeId);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class KillmailAttacker {\n");
        sb.append("    allianceId: ").append(toIndentedString(allianceId)).append("\n");
        sb.append("    characterId: ").append(toIndentedString(characterId)).append("\n");
        sb.append("    corporationId: ").append(toIndentedString(corporationId)).append("\n");
        sb.append("    damageDone: ").append(toIndentedString(damageDone)).append("\n");
        sb.append("    factionId: ").append(toIndentedString(factionId)).append("\n");
        sb.append("    finalBlow: ").append(toIndentedString(finalBlow)).append("\n");
        sb.append("    securityStatus: ").append(toIndentedString(securityStatus)).append("\n");
        sb.append("    shipTypeId: ").append(toIndentedString(shipTypeId)).append("\n");
        sb.append("    weaponTypeId: ").append(toIndentedString(weaponTypeId)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    public static HashSet<String> openapiFields;
    public static HashSet<String> openapiRequiredFields;

    static {
        // a set of all properties/fields (JSON key names)
        openapiFields = new HashSet<String>();
        openapiFields.add("alliance_id");
        openapiFields.add("character_id");
        openapiFields.add("corporation_id");
        openapiFields.add("damage_done");
        openapiFields.add("faction_id");
        openapiFields.add("final_blow");
        openapiFields.add("security_status");
        openapiFields.add("ship_type_id");
        openapiFields.add("weapon_type_id");

        // a set of required properties/fields (JSON key names)
        openapiRequiredFields = new HashSet<String>();
        openapiRequiredFields.add("damage_done");
        openapiRequiredFields.add("final_blow");
        openapiRequiredFields.add("security_status");
    }

    /**
     * Validates the JSON Object and throws an exception if issues found
     *
     * @param jsonObj
     *            JSON Object
     * @throws IOException
     *             if the JSON Object is invalid with respect to
     *             KillmailAttacker
     */
    public static void validateJsonObject(JsonObject jsonObj) throws IOException {
        if (jsonObj == null) {
            if (!KillmailAttacker.openapiRequiredFields.isEmpty()) { // has
                                                                     // required
                                                                     // fields
                                                                     // but JSON
                                                                     // object
                                                                     // is null
                throw new IllegalArgumentException(String.format(
                        "The required field(s) %s in KillmailAttacker is not found in the empty JSON string",
                        KillmailAttacker.openapiRequiredFields.toString()));
            }
        }

        Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
        // check to see if the JSON string contains additional fields
        for (Entry<String, JsonElement> entry : entries) {
            if (!KillmailAttacker.openapiFields.contains(entry.getKey())) {
                throw new IllegalArgumentException(
                        String.format(
                                "The field `%s` in the JSON string is not defined in the `KillmailAttacker` properties. JSON: %s",
                                entry.getKey(), jsonObj.toString()));
            }
        }

        // check to make sure all required properties/fields are present in the
        // JSON string
        for (String requiredField : KillmailAttacker.openapiRequiredFields) {
            if (jsonObj.get(requiredField) == null) {
                throw new IllegalArgumentException(String.format(
                        "The required field `%s` is not found in the JSON string: %s", requiredField,
                        jsonObj.toString()));
            }
        }
    }

    public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
        @SuppressWarnings("unchecked")
        @Override
        public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
            if (!KillmailAttacker.class.isAssignableFrom(type.getRawType())) {
                return null; // this class only serializes 'KillmailAttacker'
                             // and its subtypes
            }
            final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
            final TypeAdapter<KillmailAttacker> thisAdapter = gson.getDelegateAdapter(this,
                    TypeToken.get(KillmailAttacker.class));

            return (TypeAdapter<T>) new TypeAdapter<KillmailAttacker>() {
                @Override
                public void write(JsonWriter out, KillmailAttacker value) throws IOException {
                    JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
                    elementAdapter.write(out, obj);
                }

                @Override
                public KillmailAttacker read(JsonReader in) throws IOException {
                    JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
                    validateJsonObject(jsonObj);
                    return thisAdapter.fromJsonTree(jsonObj);
                }

            }.nullSafe();
        }
    }

    /**
     * Create an instance of KillmailAttacker given an JSON string
     *
     * @param jsonString
     *            JSON string
     * @return An instance of KillmailAttacker
     * @throws IOException
     *             if the JSON string is invalid with respect to
     *             KillmailAttacker
     */
    public static KillmailAttacker fromJson(String jsonString) throws IOException {
        return JSON.getGson().fromJson(jsonString, KillmailAttacker.class);
    }

    /**
     * Convert an instance of KillmailAttacker to an JSON string
     *
     * @return JSON string
     */
    public String toJson() {
        return JSON.getGson().toJson(this);
    }
}
