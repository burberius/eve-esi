/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 0.2.7.dev1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package net.troja.eve.esi.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.io.Serializable;

/**
 * cost_indice object
 */
@ApiModel(description = "cost_indice object")
public class IndustrysystemsCostIndices implements Serializable {
    /**
     * activity string
     */
    public enum ActivityEnum {
        NONE("none"),

        MANUFACTURING("manufacturing"),

        RESEARCHING_TECHNOLOGY("researching_technology"),

        RESEARCHING_TIME_EFFICIENCY("researching_time_efficiency"),

        RESEARCHING_MATERIAL_EFFICIENCY("researching_material_efficiency"),

        COPYING("copying"),

        DUPLICATING("duplicating"),

        INVENTION("invention"),

        REVERSE_ENGINEERING("reverse_engineering");

        private String value;

        ActivityEnum(String value) {
            this.value = value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static ActivityEnum fromValue(String text) {
            for (ActivityEnum b : ActivityEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }
    }

    @JsonProperty("activity")
    private ActivityEnum activity = null;

    @JsonProperty("cost_index")
    private Float costIndex = null;

    public IndustrysystemsCostIndices activity(ActivityEnum activity) {
        this.activity = activity;
        return this;
    }

    /**
     * activity string
     * 
     * @return activity
     **/
    @ApiModelProperty(example = "null", required = true, value = "activity string")
    public ActivityEnum getActivity() {
        return activity;
    }

    public void setActivity(ActivityEnum activity) {
        this.activity = activity;
    }

    public IndustrysystemsCostIndices costIndex(Float costIndex) {
        this.costIndex = costIndex;
        return this;
    }

    /**
     * cost_index number
     * 
     * @return costIndex
     **/
    @ApiModelProperty(example = "null", required = true, value = "cost_index number")
    public Float getCostIndex() {
        return costIndex;
    }

    public void setCostIndex(Float costIndex) {
        this.costIndex = costIndex;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        IndustrysystemsCostIndices industrysystemsCostIndices = (IndustrysystemsCostIndices) o;
        return Objects.equals(this.activity, industrysystemsCostIndices.activity)
                && Objects.equals(this.costIndex, industrysystemsCostIndices.costIndex);
    }

    @Override
    public int hashCode() {
        return Objects.hash(activity, costIndex);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class IndustrysystemsCostIndices {\n");

        sb.append("    activity: ").append(toIndentedString(activity)).append("\n");
        sb.append("    costIndex: ").append(toIndentedString(costIndex)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
