/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package net.troja.eve.esi.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.io.Serializable;

/**
 * 200 ok object
 */
@ApiModel(description = "200 ok object")
public class StatusResponse implements Serializable {
    private static final long serialVersionUID = 1L;

    @JsonProperty("players")
    private Integer players = null;

    @JsonProperty("server_version")
    private String serverVersion = null;

    @JsonProperty("start_time")
    private OffsetDateTime startTime = null;

    @JsonProperty("vip")
    private Boolean vip = null;

    public StatusResponse players(Integer players) {
        this.players = players;
        return this;
    }

    /**
     * Current online player count
     * 
     * @return players
     **/
    @ApiModelProperty(example = "null", required = true, value = "Current online player count")
    public Integer getPlayers() {
        return players;
    }

    public void setPlayers(Integer players) {
        this.players = players;
    }

    public StatusResponse serverVersion(String serverVersion) {
        this.serverVersion = serverVersion;
        return this;
    }

    /**
     * Running version as string
     * 
     * @return serverVersion
     **/
    @ApiModelProperty(example = "null", required = true, value = "Running version as string")
    public String getServerVersion() {
        return serverVersion;
    }

    public void setServerVersion(String serverVersion) {
        this.serverVersion = serverVersion;
    }

    public StatusResponse startTime(OffsetDateTime startTime) {
        this.startTime = startTime;
        return this;
    }

    /**
     * Server start timestamp
     * 
     * @return startTime
     **/
    @ApiModelProperty(example = "null", required = true, value = "Server start timestamp")
    public OffsetDateTime getStartTime() {
        return startTime;
    }

    public void setStartTime(OffsetDateTime startTime) {
        this.startTime = startTime;
    }

    public StatusResponse vip(Boolean vip) {
        this.vip = vip;
        return this;
    }

    /**
     * If the server is in VIP mode
     * 
     * @return vip
     **/
    @ApiModelProperty(example = "null", value = "If the server is in VIP mode")
    public Boolean getVip() {
        return vip;
    }

    public void setVip(Boolean vip) {
        this.vip = vip;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        StatusResponse statusResponse = (StatusResponse) o;
        return Objects.equals(this.players, statusResponse.players)
                && Objects.equals(this.serverVersion, statusResponse.serverVersion)
                && Objects.equals(this.startTime, statusResponse.startTime)
                && Objects.equals(this.vip, statusResponse.vip);
    }

    @Override
    public int hashCode() {
        return Objects.hash(players, serverVersion, startTime, vip);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class StatusResponse {\n");

        sb.append("    players: ").append(toIndentedString(players)).append("\n");
        sb.append("    serverVersion: ").append(toIndentedString(serverVersion)).append("\n");
        sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
        sb.append("    vip: ").append(toIndentedString(vip)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
