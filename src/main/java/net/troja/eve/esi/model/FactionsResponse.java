/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 1.17
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package net.troja.eve.esi.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import net.troja.eve.esi.JSON;

/**
 * 200 ok object
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class FactionsResponse implements Serializable {
    private static final long serialVersionUID = 1L;

    public static final String SERIALIZED_NAME_CORPORATION_ID = "corporation_id";
    @SerializedName(SERIALIZED_NAME_CORPORATION_ID)
    private Integer corporationId;

    public static final String SERIALIZED_NAME_DESCRIPTION = "description";
    @SerializedName(SERIALIZED_NAME_DESCRIPTION)
    private String description;

    public static final String SERIALIZED_NAME_FACTION_ID = "faction_id";
    @SerializedName(SERIALIZED_NAME_FACTION_ID)
    private Integer factionId;

    public static final String SERIALIZED_NAME_IS_UNIQUE = "is_unique";
    @SerializedName(SERIALIZED_NAME_IS_UNIQUE)
    private Boolean isUnique;

    public static final String SERIALIZED_NAME_MILITIA_CORPORATION_ID = "militia_corporation_id";
    @SerializedName(SERIALIZED_NAME_MILITIA_CORPORATION_ID)
    private Integer militiaCorporationId;

    public static final String SERIALIZED_NAME_NAME = "name";
    @SerializedName(SERIALIZED_NAME_NAME)
    private String name;

    public static final String SERIALIZED_NAME_SIZE_FACTOR = "size_factor";
    @SerializedName(SERIALIZED_NAME_SIZE_FACTOR)
    private Float sizeFactor;

    public static final String SERIALIZED_NAME_SOLAR_SYSTEM_ID = "solar_system_id";
    @SerializedName(SERIALIZED_NAME_SOLAR_SYSTEM_ID)
    private Integer solarSystemId;

    public static final String SERIALIZED_NAME_STATION_COUNT = "station_count";
    @SerializedName(SERIALIZED_NAME_STATION_COUNT)
    private Integer stationCount;

    public static final String SERIALIZED_NAME_STATION_SYSTEM_COUNT = "station_system_count";
    @SerializedName(SERIALIZED_NAME_STATION_SYSTEM_COUNT)
    private Integer stationSystemCount;

    public FactionsResponse() {
    }

    public FactionsResponse corporationId(Integer corporationId) {

        this.corporationId = corporationId;
        return this;
    }

    /**
     * corporation_id integer
     * 
     * @return corporationId
     **/
    @javax.annotation.Nullable
    public Integer getCorporationId() {
        return corporationId;
    }

    public void setCorporationId(Integer corporationId) {
        this.corporationId = corporationId;
    }

    public FactionsResponse description(String description) {

        this.description = description;
        return this;
    }

    /**
     * description string
     * 
     * @return description
     **/
    @javax.annotation.Nonnull
    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public FactionsResponse factionId(Integer factionId) {

        this.factionId = factionId;
        return this;
    }

    /**
     * faction_id integer
     * 
     * @return factionId
     **/
    @javax.annotation.Nonnull
    public Integer getFactionId() {
        return factionId;
    }

    public void setFactionId(Integer factionId) {
        this.factionId = factionId;
    }

    public FactionsResponse isUnique(Boolean isUnique) {

        this.isUnique = isUnique;
        return this;
    }

    /**
     * is_unique boolean
     * 
     * @return isUnique
     **/
    @javax.annotation.Nonnull
    public Boolean getIsUnique() {
        return isUnique;
    }

    public void setIsUnique(Boolean isUnique) {
        this.isUnique = isUnique;
    }

    public FactionsResponse militiaCorporationId(Integer militiaCorporationId) {

        this.militiaCorporationId = militiaCorporationId;
        return this;
    }

    /**
     * militia_corporation_id integer
     * 
     * @return militiaCorporationId
     **/
    @javax.annotation.Nullable
    public Integer getMilitiaCorporationId() {
        return militiaCorporationId;
    }

    public void setMilitiaCorporationId(Integer militiaCorporationId) {
        this.militiaCorporationId = militiaCorporationId;
    }

    public FactionsResponse name(String name) {

        this.name = name;
        return this;
    }

    /**
     * name string
     * 
     * @return name
     **/
    @javax.annotation.Nonnull
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public FactionsResponse sizeFactor(Float sizeFactor) {

        this.sizeFactor = sizeFactor;
        return this;
    }

    /**
     * size_factor number
     * 
     * @return sizeFactor
     **/
    @javax.annotation.Nonnull
    public Float getSizeFactor() {
        return sizeFactor;
    }

    public void setSizeFactor(Float sizeFactor) {
        this.sizeFactor = sizeFactor;
    }

    public FactionsResponse solarSystemId(Integer solarSystemId) {

        this.solarSystemId = solarSystemId;
        return this;
    }

    /**
     * solar_system_id integer
     * 
     * @return solarSystemId
     **/
    @javax.annotation.Nullable
    public Integer getSolarSystemId() {
        return solarSystemId;
    }

    public void setSolarSystemId(Integer solarSystemId) {
        this.solarSystemId = solarSystemId;
    }

    public FactionsResponse stationCount(Integer stationCount) {

        this.stationCount = stationCount;
        return this;
    }

    /**
     * station_count integer
     * 
     * @return stationCount
     **/
    @javax.annotation.Nonnull
    public Integer getStationCount() {
        return stationCount;
    }

    public void setStationCount(Integer stationCount) {
        this.stationCount = stationCount;
    }

    public FactionsResponse stationSystemCount(Integer stationSystemCount) {

        this.stationSystemCount = stationSystemCount;
        return this;
    }

    /**
     * station_system_count integer
     * 
     * @return stationSystemCount
     **/
    @javax.annotation.Nonnull
    public Integer getStationSystemCount() {
        return stationSystemCount;
    }

    public void setStationSystemCount(Integer stationSystemCount) {
        this.stationSystemCount = stationSystemCount;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        FactionsResponse factionsResponse = (FactionsResponse) o;
        return Objects.equals(this.corporationId, factionsResponse.corporationId)
                && Objects.equals(this.description, factionsResponse.description)
                && Objects.equals(this.factionId, factionsResponse.factionId)
                && Objects.equals(this.isUnique, factionsResponse.isUnique)
                && Objects.equals(this.militiaCorporationId, factionsResponse.militiaCorporationId)
                && Objects.equals(this.name, factionsResponse.name)
                && Objects.equals(this.sizeFactor, factionsResponse.sizeFactor)
                && Objects.equals(this.solarSystemId, factionsResponse.solarSystemId)
                && Objects.equals(this.stationCount, factionsResponse.stationCount)
                && Objects.equals(this.stationSystemCount, factionsResponse.stationSystemCount);
    }

    @Override
    public int hashCode() {
        return Objects.hash(corporationId, description, factionId, isUnique, militiaCorporationId, name, sizeFactor,
                solarSystemId, stationCount, stationSystemCount);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class FactionsResponse {\n");
        sb.append("    corporationId: ").append(toIndentedString(corporationId)).append("\n");
        sb.append("    description: ").append(toIndentedString(description)).append("\n");
        sb.append("    factionId: ").append(toIndentedString(factionId)).append("\n");
        sb.append("    isUnique: ").append(toIndentedString(isUnique)).append("\n");
        sb.append("    militiaCorporationId: ").append(toIndentedString(militiaCorporationId)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    sizeFactor: ").append(toIndentedString(sizeFactor)).append("\n");
        sb.append("    solarSystemId: ").append(toIndentedString(solarSystemId)).append("\n");
        sb.append("    stationCount: ").append(toIndentedString(stationCount)).append("\n");
        sb.append("    stationSystemCount: ").append(toIndentedString(stationSystemCount)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    public static HashSet<String> openapiFields;
    public static HashSet<String> openapiRequiredFields;

    static {
        // a set of all properties/fields (JSON key names)
        openapiFields = new HashSet<String>();
        openapiFields.add("corporation_id");
        openapiFields.add("description");
        openapiFields.add("faction_id");
        openapiFields.add("is_unique");
        openapiFields.add("militia_corporation_id");
        openapiFields.add("name");
        openapiFields.add("size_factor");
        openapiFields.add("solar_system_id");
        openapiFields.add("station_count");
        openapiFields.add("station_system_count");

        // a set of required properties/fields (JSON key names)
        openapiRequiredFields = new HashSet<String>();
        openapiRequiredFields.add("description");
        openapiRequiredFields.add("faction_id");
        openapiRequiredFields.add("is_unique");
        openapiRequiredFields.add("name");
        openapiRequiredFields.add("size_factor");
        openapiRequiredFields.add("station_count");
        openapiRequiredFields.add("station_system_count");
    }

    /**
     * Validates the JSON Object and throws an exception if issues found
     *
     * @param jsonObj
     *            JSON Object
     * @throws IOException
     *             if the JSON Object is invalid with respect to
     *             FactionsResponse
     */
    public static void validateJsonObject(JsonObject jsonObj) throws IOException {
        if (jsonObj == null) {
            if (!FactionsResponse.openapiRequiredFields.isEmpty()) { // has
                                                                     // required
                                                                     // fields
                                                                     // but JSON
                                                                     // object
                                                                     // is null
                throw new IllegalArgumentException(String.format(
                        "The required field(s) %s in FactionsResponse is not found in the empty JSON string",
                        FactionsResponse.openapiRequiredFields.toString()));
            }
        }

        Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
        // check to see if the JSON string contains additional fields
        for (Entry<String, JsonElement> entry : entries) {
            if (!FactionsResponse.openapiFields.contains(entry.getKey())) {
                throw new IllegalArgumentException(
                        String.format(
                                "The field `%s` in the JSON string is not defined in the `FactionsResponse` properties. JSON: %s",
                                entry.getKey(), jsonObj.toString()));
            }
        }

        // check to make sure all required properties/fields are present in the
        // JSON string
        for (String requiredField : FactionsResponse.openapiRequiredFields) {
            if (jsonObj.get(requiredField) == null) {
                throw new IllegalArgumentException(String.format(
                        "The required field `%s` is not found in the JSON string: %s", requiredField,
                        jsonObj.toString()));
            }
        }
        if (!jsonObj.get("description").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format(
                    "Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj
                            .get("description").toString()));
        }
        if (!jsonObj.get("name").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format(
                    "Expected the field `name` to be a primitive type in the JSON string but got `%s`",
                    jsonObj.get("name").toString()));
        }
    }

    public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
        @SuppressWarnings("unchecked")
        @Override
        public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
            if (!FactionsResponse.class.isAssignableFrom(type.getRawType())) {
                return null; // this class only serializes 'FactionsResponse'
                             // and its subtypes
            }
            final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
            final TypeAdapter<FactionsResponse> thisAdapter = gson.getDelegateAdapter(this,
                    TypeToken.get(FactionsResponse.class));

            return (TypeAdapter<T>) new TypeAdapter<FactionsResponse>() {
                @Override
                public void write(JsonWriter out, FactionsResponse value) throws IOException {
                    JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
                    elementAdapter.write(out, obj);
                }

                @Override
                public FactionsResponse read(JsonReader in) throws IOException {
                    JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
                    validateJsonObject(jsonObj);
                    return thisAdapter.fromJsonTree(jsonObj);
                }

            }.nullSafe();
        }
    }

    /**
     * Create an instance of FactionsResponse given an JSON string
     *
     * @param jsonString
     *            JSON string
     * @return An instance of FactionsResponse
     * @throws IOException
     *             if the JSON string is invalid with respect to
     *             FactionsResponse
     */
    public static FactionsResponse fromJson(String jsonString) throws IOException {
        return JSON.getGson().fromJson(jsonString, FactionsResponse.class);
    }

    /**
     * Convert an instance of FactionsResponse to an JSON string
     *
     * @return JSON string
     */
    public String toJson() {
        return JSON.getGson().toJson(this);
    }
}
