/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 0.2.7.dev1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package net.troja.eve.esi.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.io.Serializable;

/**
 * recipient object
 */
@ApiModel(description = "recipient object")
public class CharacterscharacterIdmailRecipients1 implements Serializable {
    @JsonProperty("recipient_id")
    private Integer recipientId = null;

    /**
     * recipient_type string
     */
    public enum RecipientTypeEnum {
        ALLIANCE("alliance"),

        CHARACTER("character"),

        CORPORATION("corporation"),

        MAILING_LIST("mailing_list");

        private String value;

        RecipientTypeEnum(String value) {
            this.value = value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static RecipientTypeEnum fromValue(String text) {
            for (RecipientTypeEnum b : RecipientTypeEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }
    }

    @JsonProperty("recipient_type")
    private RecipientTypeEnum recipientType = null;

    public CharacterscharacterIdmailRecipients1 recipientId(Integer recipientId) {
        this.recipientId = recipientId;
        return this;
    }

    /**
     * recipient_id integer
     * 
     * @return recipientId
     **/
    @ApiModelProperty(example = "null", required = true, value = "recipient_id integer")
    public Integer getRecipientId() {
        return recipientId;
    }

    public void setRecipientId(Integer recipientId) {
        this.recipientId = recipientId;
    }

    public CharacterscharacterIdmailRecipients1 recipientType(RecipientTypeEnum recipientType) {
        this.recipientType = recipientType;
        return this;
    }

    /**
     * recipient_type string
     * 
     * @return recipientType
     **/
    @ApiModelProperty(example = "null", required = true, value = "recipient_type string")
    public RecipientTypeEnum getRecipientType() {
        return recipientType;
    }

    public void setRecipientType(RecipientTypeEnum recipientType) {
        this.recipientType = recipientType;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CharacterscharacterIdmailRecipients1 characterscharacterIdmailRecipients1 = (CharacterscharacterIdmailRecipients1) o;
        return Objects.equals(this.recipientId, characterscharacterIdmailRecipients1.recipientId)
                && Objects.equals(this.recipientType, characterscharacterIdmailRecipients1.recipientType);
    }

    @Override
    public int hashCode() {
        return Objects.hash(recipientId, recipientType);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class CharacterscharacterIdmailRecipients1 {\n");

        sb.append("    recipientId: ").append(toIndentedString(recipientId)).append("\n");
        sb.append("    recipientType: ").append(toIndentedString(recipientType)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
