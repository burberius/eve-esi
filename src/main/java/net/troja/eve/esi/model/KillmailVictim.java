/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 1.30
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package net.troja.eve.esi.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import net.troja.eve.esi.model.KillmailItem;
import net.troja.eve.esi.model.Position;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import net.troja.eve.esi.JSON;

/**
 * victim object
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class KillmailVictim implements Serializable {
    private static final long serialVersionUID = 1L;

    public static final String SERIALIZED_NAME_ALLIANCE_ID = "alliance_id";
    @SerializedName(SERIALIZED_NAME_ALLIANCE_ID)
    private Integer allianceId;

    public static final String SERIALIZED_NAME_CHARACTER_ID = "character_id";
    @SerializedName(SERIALIZED_NAME_CHARACTER_ID)
    private Integer characterId;

    public static final String SERIALIZED_NAME_CORPORATION_ID = "corporation_id";
    @SerializedName(SERIALIZED_NAME_CORPORATION_ID)
    private Integer corporationId;

    public static final String SERIALIZED_NAME_DAMAGE_TAKEN = "damage_taken";
    @SerializedName(SERIALIZED_NAME_DAMAGE_TAKEN)
    private Integer damageTaken;

    public static final String SERIALIZED_NAME_FACTION_ID = "faction_id";
    @SerializedName(SERIALIZED_NAME_FACTION_ID)
    private Integer factionId;

    public static final String SERIALIZED_NAME_ITEMS = "items";
    @SerializedName(SERIALIZED_NAME_ITEMS)
    private List<KillmailItem> items;

    public static final String SERIALIZED_NAME_POSITION = "position";
    @SerializedName(SERIALIZED_NAME_POSITION)
    private Position position;

    public static final String SERIALIZED_NAME_SHIP_TYPE_ID = "ship_type_id";
    @SerializedName(SERIALIZED_NAME_SHIP_TYPE_ID)
    private Integer shipTypeId;

    public KillmailVictim() {
    }

    public KillmailVictim allianceId(Integer allianceId) {

        this.allianceId = allianceId;
        return this;
    }

    /**
     * alliance_id integer
     * 
     * @return allianceId
     **/
    @javax.annotation.Nullable
    public Integer getAllianceId() {
        return allianceId;
    }

    public void setAllianceId(Integer allianceId) {
        this.allianceId = allianceId;
    }

    public KillmailVictim characterId(Integer characterId) {

        this.characterId = characterId;
        return this;
    }

    /**
     * character_id integer
     * 
     * @return characterId
     **/
    @javax.annotation.Nullable
    public Integer getCharacterId() {
        return characterId;
    }

    public void setCharacterId(Integer characterId) {
        this.characterId = characterId;
    }

    public KillmailVictim corporationId(Integer corporationId) {

        this.corporationId = corporationId;
        return this;
    }

    /**
     * corporation_id integer
     * 
     * @return corporationId
     **/
    @javax.annotation.Nullable
    public Integer getCorporationId() {
        return corporationId;
    }

    public void setCorporationId(Integer corporationId) {
        this.corporationId = corporationId;
    }

    public KillmailVictim damageTaken(Integer damageTaken) {

        this.damageTaken = damageTaken;
        return this;
    }

    /**
     * How much total damage was taken by the victim
     * 
     * @return damageTaken
     **/
    @javax.annotation.Nonnull
    public Integer getDamageTaken() {
        return damageTaken;
    }

    public void setDamageTaken(Integer damageTaken) {
        this.damageTaken = damageTaken;
    }

    public KillmailVictim factionId(Integer factionId) {

        this.factionId = factionId;
        return this;
    }

    /**
     * faction_id integer
     * 
     * @return factionId
     **/
    @javax.annotation.Nullable
    public Integer getFactionId() {
        return factionId;
    }

    public void setFactionId(Integer factionId) {
        this.factionId = factionId;
    }

    public KillmailVictim items(List<KillmailItem> items) {

        this.items = items;
        return this;
    }

    public KillmailVictim addItemsItem(KillmailItem itemsItem) {
        if (this.items == null) {
            this.items = new ArrayList<>();
        }
        this.items.add(itemsItem);
        return this;
    }

    /**
     * items array
     * 
     * @return items
     **/
    @javax.annotation.Nullable
    public List<KillmailItem> getItems() {
        return items;
    }

    public void setItems(List<KillmailItem> items) {
        this.items = items;
    }

    public KillmailVictim position(Position position) {

        this.position = position;
        return this;
    }

    /**
     * Get position
     * 
     * @return position
     **/
    @javax.annotation.Nullable
    public Position getPosition() {
        return position;
    }

    public void setPosition(Position position) {
        this.position = position;
    }

    public KillmailVictim shipTypeId(Integer shipTypeId) {

        this.shipTypeId = shipTypeId;
        return this;
    }

    /**
     * The ship that the victim was piloting and was destroyed
     * 
     * @return shipTypeId
     **/
    @javax.annotation.Nonnull
    public Integer getShipTypeId() {
        return shipTypeId;
    }

    public void setShipTypeId(Integer shipTypeId) {
        this.shipTypeId = shipTypeId;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        KillmailVictim killmailVictim = (KillmailVictim) o;
        return Objects.equals(this.allianceId, killmailVictim.allianceId)
                && Objects.equals(this.characterId, killmailVictim.characterId)
                && Objects.equals(this.corporationId, killmailVictim.corporationId)
                && Objects.equals(this.damageTaken, killmailVictim.damageTaken)
                && Objects.equals(this.factionId, killmailVictim.factionId)
                && Objects.equals(this.items, killmailVictim.items)
                && Objects.equals(this.position, killmailVictim.position)
                && Objects.equals(this.shipTypeId, killmailVictim.shipTypeId);
    }

    @Override
    public int hashCode() {
        return Objects
                .hash(allianceId, characterId, corporationId, damageTaken, factionId, items, position, shipTypeId);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class KillmailVictim {\n");
        sb.append("    allianceId: ").append(toIndentedString(allianceId)).append("\n");
        sb.append("    characterId: ").append(toIndentedString(characterId)).append("\n");
        sb.append("    corporationId: ").append(toIndentedString(corporationId)).append("\n");
        sb.append("    damageTaken: ").append(toIndentedString(damageTaken)).append("\n");
        sb.append("    factionId: ").append(toIndentedString(factionId)).append("\n");
        sb.append("    items: ").append(toIndentedString(items)).append("\n");
        sb.append("    position: ").append(toIndentedString(position)).append("\n");
        sb.append("    shipTypeId: ").append(toIndentedString(shipTypeId)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    public static HashSet<String> openapiFields;
    public static HashSet<String> openapiRequiredFields;

    static {
        // a set of all properties/fields (JSON key names)
        openapiFields = new HashSet<String>();
        openapiFields.add("alliance_id");
        openapiFields.add("character_id");
        openapiFields.add("corporation_id");
        openapiFields.add("damage_taken");
        openapiFields.add("faction_id");
        openapiFields.add("items");
        openapiFields.add("position");
        openapiFields.add("ship_type_id");

        // a set of required properties/fields (JSON key names)
        openapiRequiredFields = new HashSet<String>();
        openapiRequiredFields.add("damage_taken");
        openapiRequiredFields.add("ship_type_id");
    }

    /**
     * Validates the JSON Object and throws an exception if issues found
     *
     * @param jsonObj
     *            JSON Object
     * @throws IOException
     *             if the JSON Object is invalid with respect to KillmailVictim
     */
    public static void validateJsonObject(JsonObject jsonObj) throws IOException {
        if (jsonObj == null) {
            if (!KillmailVictim.openapiRequiredFields.isEmpty()) { // has
                                                                   // required
                                                                   // fields but
                                                                   // JSON
                                                                   // object is
                                                                   // null
                throw new IllegalArgumentException(String.format(
                        "The required field(s) %s in KillmailVictim is not found in the empty JSON string",
                        KillmailVictim.openapiRequiredFields.toString()));
            }
        }

        Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
        // check to see if the JSON string contains additional fields
        for (Entry<String, JsonElement> entry : entries) {
            if (!KillmailVictim.openapiFields.contains(entry.getKey())) {
                throw new IllegalArgumentException(
                        String.format(
                                "The field `%s` in the JSON string is not defined in the `KillmailVictim` properties. JSON: %s",
                                entry.getKey(), jsonObj.toString()));
            }
        }

        // check to make sure all required properties/fields are present in the
        // JSON string
        for (String requiredField : KillmailVictim.openapiRequiredFields) {
            if (jsonObj.get(requiredField) == null) {
                throw new IllegalArgumentException(String.format(
                        "The required field `%s` is not found in the JSON string: %s", requiredField,
                        jsonObj.toString()));
            }
        }
        if (jsonObj.get("items") != null && !jsonObj.get("items").isJsonNull()) {
            JsonArray jsonArrayitems = jsonObj.getAsJsonArray("items");
            if (jsonArrayitems != null) {
                // ensure the json data is an array
                if (!jsonObj.get("items").isJsonArray()) {
                    throw new IllegalArgumentException(String.format(
                            "Expected the field `items` to be an array in the JSON string but got `%s`",
                            jsonObj.get("items").toString()));
                }

                // validate the optional field `items` (array)
                for (int i = 0; i < jsonArrayitems.size(); i++) {
                    KillmailItem.validateJsonObject(jsonArrayitems.get(i).getAsJsonObject());
                };
            }
        }
        // validate the optional field `position`
        if (jsonObj.get("position") != null && !jsonObj.get("position").isJsonNull()) {
            Position.validateJsonObject(jsonObj.getAsJsonObject("position"));
        }
    }

    public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
        @SuppressWarnings("unchecked")
        @Override
        public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
            if (!KillmailVictim.class.isAssignableFrom(type.getRawType())) {
                return null; // this class only serializes 'KillmailVictim' and
                             // its subtypes
            }
            final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
            final TypeAdapter<KillmailVictim> thisAdapter = gson.getDelegateAdapter(this,
                    TypeToken.get(KillmailVictim.class));

            return (TypeAdapter<T>) new TypeAdapter<KillmailVictim>() {
                @Override
                public void write(JsonWriter out, KillmailVictim value) throws IOException {
                    JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
                    elementAdapter.write(out, obj);
                }

                @Override
                public KillmailVictim read(JsonReader in) throws IOException {
                    JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
                    validateJsonObject(jsonObj);
                    return thisAdapter.fromJsonTree(jsonObj);
                }

            }.nullSafe();
        }
    }

    /**
     * Create an instance of KillmailVictim given an JSON string
     *
     * @param jsonString
     *            JSON string
     * @return An instance of KillmailVictim
     * @throws IOException
     *             if the JSON string is invalid with respect to KillmailVictim
     */
    public static KillmailVictim fromJson(String jsonString) throws IOException {
        return JSON.getGson().fromJson(jsonString, KillmailVictim.class);
    }

    /**
     * Convert an instance of KillmailVictim to an JSON string
     *
     * @return JSON string
     */
    public String toJson() {
        return JSON.getGson().toJson(this);
    }
}
